name: app

on:
  # Trigger the workflow every time you push to the `main` branch
  push:
    branches:
      - main
    paths:
      - "graph_app/**"
  workflow_dispatch:

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Node.js version from .tool-versions file
        id: node-version
        run: echo "::set-output name=version::$(grep nodejs .tool-versions | cut -f 2 -d ' ')"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node-version.outputs.version }}

      - name: Extract pnpm version from .tool-versions file
        id: pnpm-version
        run: echo "::set-output name=version::$(grep pnpm .tool-versions | cut -f 2 -d ' ')"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: ${{ steps.pnpm-version.outputs.version }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        working-directory: graph_app

      - name: Build
        run: pnpm build
        working-directory: graph_app
        env:
          VITE_API_ENDPOINT: ${{ vars.VITE_API_ENDPOINT }}

      - name: Release Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: graph_app/build

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: setup-and-build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: app-production
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
